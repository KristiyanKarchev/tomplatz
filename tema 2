----------------------------------------------------------------------------------

Демонстрирайте как ще запишете с код на C# променлива от тип символен низ със стойност: Hello, my name is Niki. Запишете отговора в полето.

string text = "Hello, my name is Niki.";

----------------------------------------------------------------------------------

мате дадена следната матрица:

41712
09537
39763
52138

Имате и следният код на C#:



Какво ще се отпечата на конзолата? Решете задачата и запишете отговора в празното поле!

4 1 7 1 2
5 7
7
5 2 1 8

----------------------------------------------------------------------------------

Даден е следния програмен код на C#. След изпълнението на тази програма какво ще се отпечата на конзолата? Решете задачата и в празното поле запишете само това, което ще се отпечата!

Примерен вход: Java C# PHP PHP JAVA C java

java, c#, c

----------------------------------------------------------------------------------

Обяснете какво прави метода ContainsValue(V) реализиран в класа Dictionary<K,V>?

Проверява дали в речникa присъстват една или повече наредени двойки с посочената стойност. Тази операция работи бавно, тъй като проверява всеки елемент на хеш-таблицата.

----------------------------------------------------------------------------------

В най-популярната система за контрол на версиите GitHub има няколко основни команди, които се използват когато пишете в конзолния клиент GitBash. 
Обяснете какво прави командата git pull, като поставите липсващите думи в празните полета.

С командата pull автоматично [изтегляте] промените от отдалеченото хранилище.

----------------------------------------------------------------------------------

Какво представляват бройните системи? Дефинирайте понятието бройна система, като поставите липсващите думи в изреченията. 

Бройните системи са начин за [представяне] на числата, чрез [краен набор] от [графични знаци] наречени цифри. Към тях трябва да се добавят и [правила] за представяне на числата.

----------------------------------------------------------------------------------

Опишете как се осъществява достъп до елементите на многомерен масив в C#?

Достъп до елементите на многомерен масив

Матриците имат две размерности и съответно всеки техен елемент се достъпва с помощта на два индекса – един за редовете и един за коло­ните. Многомерните масиви имат различен индекс за всяка размерност.

Всяка размерност в многомерен масив започва от индекс нула.

int[,] matrix =
{
      {1, 2, 3, 4},    
      {5, 6, 7, 8},
};

Масивът matrix има 8 елемента, разположени в 2 реда и 4 колони. Всеки елемент може да се достъпи по следния начин: matrix[0, 0]  matrix[0, 1] и т.н.
Ако означим индекса по редове с row, а индекса по колони с col, тогава достъпа до елемент от двумерен масив има следния общ вид: matrix[row, col].
При многомерните масиви всеки елемент се идентифицира уникално с толкова на брой индекси, колкото е размерността на масива: nDimensionalArray[index1, … , indexN]

----------------------------------------------------------------------------------

В най-популярната система за контрол на версиите GitHub има няколко основни команди, 
които се използват когато пишете в конзолния клиент GitBash. Обяснете какво прави командата git commit, като поставите липсващите думи в празните полета.

След като промените са готови (staged), с командата commit [публикувате] промените.

----------------------------------------------------------------------------------

Демонстрирайте как ще достъпите елемент от масива. Напишете код с C#, който да отпечата на конзолата името Alex от масива names.

string[] names =  {"John", "Peter", "Stella", "Alex", "Jessie"};

Правилният отговор е: Console.WriteLine(names[3]);

----------------------------------------------------------------------------------

Дефинирайте понятието речник, като попълните липсващите думи в текста.

Речниците са известни още като [асоциативни масиви или карти]. В тях всеки [елемент ] представлява съответствие между [ключ и стойност].  На един [ключ] може да се съпостави точно една [стойност]

----------------------------------------------------------------------------------

Имате следният проблем:

Имате някакъв текст. Вашата задача е да намерите всички различни думи в текста, както и колко пъти се среща всяка една от тях. Като допълнително условие имате и да изведете намерените думи по азбучен ред.

Посочете кой от класовете в C# е най-подходящ да използвате, за да решите дадения проблем?

Изберете едно
a. SortedDictionary <<<<<<<<<<<<<<<<<<<<<<<
b. Dictionary
c. List
d. Stack

----------------------------------------------------------------------------------

Опишете по какъв начин ще извлечете дължината на многомерен масив в C#? 
Запишете методите, които ще използвате, за да извлечете броя на редовете на двумерен масив и дължината на всеки от редовете.

Дължина на многомерен масив

Всяка размерност на многомерен масив има собствена дължина, която е достъпна по време на изпълнение на програмата.
int[,] matrix =
{
      {1, 2, 3, 4},    
      {5, 6, 7, 8},
};

Можем да извлечем броя на редовете на този двумерен масив чрез matrix.GetLength(0), а дължината на всеки от редовете (т.е. броя колони) с matrix.GetLength(1).

----------------------------------------------------------------------------------

Дефинирайте понятието шестнадесетична бройна система. Къде най-често се използва? Как се представят шестнайсетичните числа в шестнадесетичната бройна система?

При шестнайсетичните числа (hexadecimal numbers) имаме за основа на бройната система числото 16, което налага да бъдат използвани 16 знака (цифри) за представянето на всички възможни стойности от 0 до 15 включително. 

Шестнадесетичната бройна система се използва често при компютрите, тъй като тя може да представи двоичните числа в по-удобен вид.

За представянето на шестнайсе­тичните числа се използват числата от 0 до 9 и латинските букви от A до F. Всяка от тях има съответната стойност:

A=10, B=11, C=12, D=13, E=14, F=15

Като примери за шестнайсетични числа могат да бъдат посочени съответно, D2, 1F2F1, D1E и др.

----------------------------------------------------------------------------------

Дефинирайте понятието масив в C# като попълните празните думи в текста:

Масивите представля­ват [съвкупности от променливи], които наричаме [елементи]. Всеки от [елементите ] в масива е номериран с [индекс].

Броят елементи в даден масив се нарича [дължина на масива]. Всички елементи на даден масив [са от един и същи тип], независимо дали е примитивен или референтен. 

Масивите могат да бъдат от различни размерности, като най-често използвани са едномерните и двумерните масиви. Едномерните масиви се наричат още [вектори], а двумерните – [матрици].

----------------------------------------------------------------------------------

Посочете правилната стойност по подразбиране към всеки от типовете данни:

bool → false, 
sbyte → 0, 
object → null, 
float → 0.0f, 
decimal → 0.0m, 
char → '\u0000', 
string → null

----------------------------------------------------------------------------------

Видове числа

 static void Main(string[] args)
        {
            int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray(); //2Т

            List<int> evens = new List<int>(); 
            List<int> odds = new List<int>();  
            List<int> sum5 = new List<int>();  

            for (int i = 0; i < nums.Length; i++) //1Т
            {
                if (nums[i] % 2 == 0) //2Т
                {
                    evens.Add(nums[i]);
                }
                else
                {//1Т
                    odds.Add(nums[i]);
                }
                if (SumDigits(nums[i]) % 10 == 5)//2Т
                {
                    sum5.Add(nums[i]); 
                }
            }
            Console.WriteLine(String.Join(", ", evens));
            Console.WriteLine(String.Join(", ", odds));
            Console.WriteLine(String.Join(", ", sum5));
        }
        public static int SumDigits(int number)
        {
            int sum = 0;

            while (number != 0) //2Т
            {
                sum += number % 10;
                number /= 10;
            }

            return sum;
        }

----------------------------------------------------------------------------------

Дефинирайте понятието string в C# като попълните липсващите думи в текста.

Символният низ е [последователност от символи], записана на даден адрес в паметта. 

Символният низ е [неизменим (immutable)]. След като се  инициализира, 
съдържанието на променливата [не се] променя директно – ако опитаме да променим стойността, тя ще бъде записана на [ново ] място в [динамичната ] памет, а променливата ще започне да сочи към него.

----------------------------------------------------------------------------------

Опишете как ще преминете от десетична бройна система в двоична бройна система.
Преобразувайте числото  132(10)  от десетична бройна система в двоична бройна система.

При преминаване от десетична в двоична бройна система, се извършва преобразуване на десетичното число в двоично. За целите на преобразу­ването се извършва делене на две с остатък. 
Така се получават частно и остатък, който се отделя.
Числото 132 се дели целочислено на основата, към която ще преобразуваме (в примера тя е 2). След това, от остатъците получени при деленето (те са само нули и единици), 
се записва преобразуваното число. Деленето продължава, докато получим частно нула.
 
132:2=66 остатък 0;
66:2=33   остатък 0;
33:2=16   остатък 1;
16:2=8     остатък 0;
8:2=4       остатък 0;
4:2=2      остатък 0;
2:2=1       остатък 0;
1:2=0       остатък 1;

След като вече семе извършили деленето, записваме стойностите на остатъците в ред, обратен на тяхното получаване, както следва:
10000100
132(10) = 10000100(2)

----------------------------------------------------------------------------------

Дайте пример за това как бихте декларирали променлива от реален тип с десетична точност със стойност 13.45?

Правилният отговор е: decimal num = 13.45m;

----------------------------------------------------------------------------------

Посочете кои от характеристиките се отнасят към централизираните сорс-контрол системи и кои към децентрализираните сорс-контрол системи.

Използват един сървър, съдържащ всички контролирани файлове и множество от клиенти, които издърпват файловете от това централно място. [Централизирани]

Клиентите изтеглят последния snapshot на файловете и изцяло клонират цялото хранилище, включително пълната му история. [Децентрализирани]

Администраторите имат подробен контрол върху това кой какво може да прави и освен това е много по-лесно да се администрира. [Централизирани]

Ако сървърът загине, хранилището на даден проект може да се възстанови от локалното копие на всеки клиент. [Децентрализирани]

Всички данни се пазят на едно място и зависят от надеждността на сървъра, който ги съхранява. [Централизирани]

Ако сървърът по някаква причина не е достъпен за час - тогава през този час никой не може да качва своите промени. [Централизирани]

----------------------------------------------------------------------------------

Баскетболен сезон

static void Main(string[] args)
        {
            SortedDictionary<string, int> dict = new SortedDictionary<string, int>();//2Т

            string[] input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries); //2Т
            while (!input[0].Equals("END"))//1Т
            {
                if (!dict.ContainsKey(input[0]))//2Т
                { 
                    dict.Add(input[0], 0); //1Т
                }
                dict[input[0]] += int.Parse(input[1]); //1Т
                input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries); 
            }

            foreach (var kvp in dict) 
            {
                Console.WriteLine($"{kvp.Key} -> {kvp.Value}"); //1Т
            }
        }

----------------------------------------------------------------------------------

Великденски яйца

 static void Main(string[] args)
        {
            Dictionary<string, int> dict = new Dictionary<string, int>();
            int eggs = int.Parse(Console.ReadLine()); //2т
            for (int i = 0; i < eggs; i++) //1т
            {
                string color = Console.ReadLine(); 
                if (!dict.ContainsKey(color)) //2т
                {
                    dict.Add(color, 0); //1т
                }
                dict[color]++;//1т
            }

            Console.WriteLine($"Red eggs: {(dict.ContainsKey("red") ? dict["red"] : 0)}"); //1т
            Console.WriteLine($"Orange eggs: {(dict.ContainsKey("orange") ? dict["orange"] : 0)}"); //2т
            Console.WriteLine($"Blue eggs: {(dict.ContainsKey("blue") ? dict["blue"] : 0)}");
            Console.WriteLine($"Green eggs: {(dict.ContainsKey("green") ? dict["green"] : 0)}");
            Console.WriteLine($"Max eggs: {dict.Values.Max()} -> {dict.OrderByDescending(x => x.Value).FirstOrDefault().Key}");
        }

----------------------------------------------------------------------------------

Магически числа

static void Main(string[] args)
        {
            int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray(); //1Т
            List<int> evens = new List<int>();
            List<int> odds = new List<int>(); 
            List<int> sum5 = new List<int>(); 

            for (int i = 0; i < nums.Length; i++)
            {
                if (nums[i] % 2 == 0 && (nums[i] % 10 == 4 || nums[i] % 10 == 8)) //2T
                {
                    evens.Add(nums[i]);//2Т
                }//1Т
                else if (nums[i] % 2 != 0 && (nums[i] % 10 == 5 || nums[i] % 10 == 7)) 
                {
                    odds.Add(nums[i]);
                }
                if (SumDigits(nums[i]) == 15)//1Т
                {
                    sum5.Add(nums[i]); 
                }
            }

            Console.WriteLine(String.Join(", ", evens));
            Console.WriteLine(String.Join(", ", odds)); //1T
            Console.WriteLine(String.Join(", ", sum5));
        }
        public static int SumDigits(int number)
        {
            int sum = 0;

            while (number != 0)
            {
                sum += number % 10;
                number /= 10;
            }

            return sum; //2Т
        }

----------------------------------------------------------------------------------

Напишете поне три типа данни, които познавате в езика за програмиране C#.

Целочислен тип данни (Integer), Символен тип данни (Char), Символен низ (String):

----------------------------------------------------------------------------------

Дайте пример за това как бихте декларирали променлива от тип низ със стойност "Hello, World!"?


Правилният отговор е: string message = "Hello, World!"

----------------------------------------------------------------------------------

Демонстрирайте с C# код по какъв начин ще декларирате и ще заделите място в паметта на масив, който съдържа целочислен тип данни и е с дължина 6?

int[] arrary = new int[6];

----------------------------------------------------------------------------------

Обяснете какво прави метода ContainsKey(key) реализиран в класа Dictionary<K,V>?

Проверява дали в речника присъства наредена двойка с посочения ключ. Операцията работи изключително бързо.

----------------------------------------------------------------------------------

Опишете как ще преминете от двоична бройна система в десетична.

Преобразувайте числото  11101(2)  от двоична в десетична бройна система.

При преминаване от двоична в десетична бройна система, се извършва преобразуване на двоичното число в десетично. Числата записани в двоична бройна система се състоят от двоични цифри, 
които са подредени по степените на двойката. 

Всяка една двоична цифра се умножава по 2 на степен, позицията, на която се намира (в двоичното число). Накрая се извършва събиране на числата, получени за всяка от двоичните цифри,
за да се получи десетичната равностойност на двоичното число.

11101(2)  = 1х24 + 1х23 + 1х22 + 0х21 + 1х20

                          = 16(10) + 8(10) + 4(10) + 0(10) + 1(10) = 29

----------------------------------------------------------------------------------

Посочете кое от изброените НЕ е вярно за стойностните типове данни?
Изберете едно
a. Стойностните типове данни се освобождават при излизане от обхват, т.е. когато блокът с код, в който са дефинирани, завърши изпълнението си.
b. Стойностните типове данни се съхраняват в стека за изпъл­нение на програ­мата и съдържат директно стойността си.
c. Стойностните типове данни съдържат в стека за изпъл­нение на програмата референция (адрес) към динамичната памет (heap).<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
d. Стойностни са примитивните числови типове, символният тип и булевият тип: sbyte, byte, short, ushort, int, long, ulong, float, double, decimal, char, bool.

----------------------------------------------------------------------------------

Посочете кое твърдение е вярно за променливите?
Изберете едно или повече:
a. Всяка една променлива в C# си има тип и име.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
b. Имената на променливите могат да бъдат служебни думи.
c. Имената на променливите могат да започват с числа.
d. Не може да има две променливи с едно и също име.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
e. Променливата е място, на което пазим информация.<<<<<<<<<<<<<<<<<<<<<<<<

----------------------------------------------------------------------------------

Опишете как се инициализира многомерен масив в C#?

Инициализация на многомерни масиви:

Инициализацията на многомерни масиви е аналогична на инициали­за­цията на едномерните. Стойностите на елементите могат да се изброяват непосредствено след декларацията:
int[,] matrix =
{
      {1, 2, 3, 4}, // row 0 values
      {5, 6, 7, 8}, // row 1 values
};

Двумерен масив с цели числа с 2 реда и 4 колони. Във външните фигурни скоби се поставят елементите от първата размерност, т.е. редовете на двумерната матрица. Всеки ред представлява едномерен масив.

----------------------------------------------------------------------------------

Дефинирайте понятието двоична бройна система. Какво представлява? Къде се използва най-често? Как са представени числата в двоичната бройна система?

Двоичната бройна система (binary numeral system), е системата, която се използва за представяне и обработка на числата в съвременните електронноизчислителни машини. 

Числата представени в двоична бройна система, се задават във вторичен вид, т.е. вид удобен за възприемане от изчислителната машина. Този вид е малко по-трудно разбираем за човека. За представянето на двоичните числа, се използва двоичната бройна система, която има за основа числото 2. Числата записани в нея са подредени по степените на двойката. За тяхното представяне, се използват само цифрите 0 и 1.

Например със записа 1110(2) означаваме число в двоична бройна система. Ако не бъде указана изрично, бройната система се приема, че е десетична. 

----------------------------------------------------------------------------------

Посочете по кой от начините ще добавите стойност в речник, ако речника има за ключ тип данни низ и за стойност целочислен тип данни?

Изберете едно
a. dict.Include("tomatoes", 2);
b. dict.Insert("tomatoes", 2);
c. dict.Add("tomatoes", 2);<<<<<<<<<<<<<<<<<<<<<<<<<<
d. Нито едно от изброените.

----------------------------------------------------------------------------------

Посочете как се декларира многомерен масив в C#.

Декларация на двумерен масив: int[,] twoDimentionalArray;

Декларация на тримерен масив: int[,,] threeDimentionalArray;

Памет за многомерни размери се заделя като се използва ключовата дума new и за всяка размерност в квадратни скоби се задава размерът, който е необходим: 

int[,] intMatrix = new int[3, 4];

float[,] floatMatrix = new float[8, 2];

string[,,] stringCube = new string[5, 5, 5];

 intMatrix е двумерен масив с 3 елемента от тип int[] и всеки от тези 3 елемента има размерност 4. Разглеждат се като двумерни матрици, които имат редове и колони за размерности. 
 Редовете и колоните на квадратните матрици се номерират с индекси от 0 до n-1. Ако един двумерен масив има размер m на n, той има точно m*n елемента.

----------------------------------------------------------------------------------

Какво се случва, когато създаваме масив в C#? Посочете верните отговори.

Изберете едно или повече:
a. В C# масив се създава с ключовата дума array, която служи за заделяне на памет.
b. След заделянето на масива променливата Името_на_масива сочи към адрес в динамичната памет, където се намира нейната стойност. <<<<<<<<<<<<<<<<<<<<<<<<<<<<
c. В C# масив се създава с ключовата дума new, която служи за заделяне на памет.<<<<<<<<<<<<<<<<<<<<<<<<<<
d. В динамичната памет се заделя променлива с име Името_на_масива.
e. След заделянето на масива променливата Името_на_масива сочи към адрес в стека, където се намира нейната стойност. 
f. Елементите на масивите винаги се съхраняват в динамичната памет.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

----------------------------------------------------------------------------------

Напишете примерен код, който да отпечата на конзолата следната матрица:

int[,] matrix =
{
      {1, 2, 3, 4}, 
      {5, 6, 7, 8},
};

for (int row = 0; row < matrix.GetLength(0); row++)
{
      for (int col = 0; col < matrix.GetLength(1); col++)
      {
             Console.Write(matrix[row, col]);
      }
      Console.WriteLine();
}

----------------------------------------------------------------------------------

Дадени са следните парчета код на C#. Свържете всеки един от кодовете с резултата, който трябва да върне.

string str1="Hello, "; -> World

string path = "C:\\Images\\AwesomeImage.jpg"; -> AwesomeImage

string text = "C: Programming Course"; -> 1

----------------------------------------------------------------------------------

Посочете по кой от начините бихте инициализирали речник с ключ низ и стойност цяло число?

Изберете едно
a. Dictionary<int,string> dict = new Dictionary<int,string>();
b. Dictionary(string,int) dict = new Dictionary(string,int);
c. Dictionary<string,int> dict = new Dictionary<string,int>;
d. Dictionary<string,int> dict = new Dictionary<string,int>();<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

----------------------------------------------------------------------------------

Посочете кое от изброените е вярно за символните низове?

Изберете едно или повече:
a. Символните низове позволяват достъп по индекс.<<<<<<<<<<<<<<<<<<<<<<<<<<<
b. Достъпът до символа на дадена позиция в даден стринг е позволен както за четене, така и за редактиране.
c. Символните низове имат свойство Length.<<<<<<<<<<<<<<<<<<<<<<<
d. Символните низове са mutable (изменими).

----------------------------------------------------------------------------------

Дефинирайте понятието многомерен масив в C#. 

Всеки допустим в C# тип може да бъде използван за тип на елементите на масив. Масивите също може да се разглеждат като допустим тип. Едномерен масив от цели числа декларираме с int[], а двумерен масив с int[,].


Такива масиви се наричат двумерни, защото имат две измерения или още матрици (терминът идва от математиката). Масиви с повече от едно измерение се наричат многомерни.

Аналогично можем да декларираме и тримерни масиви като добавим още едно измерение int[,,].

----------------------------------------------------------------------------------

Опишете как се декларира едномерен масив в C# като попълните празните думи в текста:

В C# масивите имат [фиксирана] дължина, която се указва при [инициа­лизирането ] им и определя [броя на елементите им]. 
След като веднъж е зададена [дължината ] на масив при неговото създаване, след това [не е възможно да се променя].

----------------------------------------------------------------------------------

Дайте пример за това как бихте декларирали променлива от целочислен тип със стойност 10?

int num = 10;

----------------------------------------------------------------------------------

Опишете как ще преминете от двоична бройна система в десетична.

Преобразувайте числото  10110101(2)  от двоична в десетична бройна система.

При преминаване от двоична в десетична бройна система, се извършва преобразуване на двоичното число в десетично. Числата записани в двоична бройна система се състоят от двоични цифри, които са подредени по степените на двойката. 

Всяка една двоична цифра се умножава по 2 на степен, позицията, на която се намира (в двоичното число). Накрая се извършва събиране на числата, получени за всяка от двоичните цифри, за да се получи десетичната равностойност на двоичното число.

10110101(2)  = 1х27 + 0х26+ 1х25+ 1х24 + 0х23 + 1х22 + 0х21 + 1х20

                          = 128(10) + 0(10) + 32(10) + 16(10) + 0(10) + 4(10) + 0(10) + 1(10)= 181

----------------------------------------------------------------------------------

Ако имате речник с ключ от тип данни низ и стойност тип данни цяло число, по кой от изброените начини ще премахнете елемент от този речник, който има за ключ стойност "tomatoes"? Посочете верния отговор?

Изберете едно
a. dict.Delete("tomatoes");
b. dict.Undo("tomatoes");
c. dict.Clear("tomatoes");
d. dict.Remove("tomatoes");<<<<<<<<<<<<<<<<<<<<

----------------------------------------------------------------------------------

Напишете примерен код на C#, който да прочете от конзолата матрица с 3 реда и 4 колони със следните стойности:

3 4 5 2
1 5 8 9
4 5 3 6

int rows = 3;
            int cols = 4;
            int[,] matrix = new int[rows, cols];
            for (int row = 0; row < rows; row++)
            {
                int[] numbers = Console.ReadLine().Split().Select(int.Parse).ToArray();
                for (int col = 0; col < cols; col++)
                {
                    matrix[row, col] = numbers[col];
                }
            }

----------------------------------------------------------------------------------

Демонстрирайте с C# код по какъв начин ще декларирате и ще заделите място в паметта на списък, който съдържа текстов тип данни?

List<string> list = new List<string>();

----------------------------------------------------------------------------------

Дефинирайте понятието списък в C# като попълните липсващите думи в текста.

Списък е [линейна ] структура от данни, която съдържа [поредица от елементи]. Списъкът има свойството дължина (брой елементи) и елемен­тите му са наредени [последователно].

Списъкът позволява добавяне на елементи  [на всяко едно място], премахването им и последователното им обхождане.

----------------------------------------------------------------------------------

Дефинирайте понятието сорс-контрол система. Какво представляват? За какво служат? Как се използват?

Система за контрол на версиите (Version control system) е механизмът, по който се управлява работата по даден софтуерен проект. 
За да се улесни разработката на софтуер са създадени специални системи, които намаляват неудобствата при съвместна работа на много хора върху един проект.

Системите за контрол на версиите обикновено използват едно централно хранилище, в което се съхраняват файловете на проекта. 
Когато някой започне да работи по този проект, той създава копие на файловете от това хранилище на своята система и работи с тези копия.
В процеса на работа потребителят може да изпраща към хранилището направените от него промени и да получава промените, направени по проекта от другите хора в екипа.

След обновяване на хранилището, в него се запазват старите версии на променените файлове. Така тези файлове могат да бъдат възстановени при необходимост.
Системата за контрол на версиите също така следи за конфликти – различни промени на различните потребители, които ползват хранилището.

----------------------------------------------------------------------------------



